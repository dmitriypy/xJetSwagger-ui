servers:
  - url: https://xjet.app/
openapi: 3.0.2
info:
  title: xJetAPI
  description: |
    This API based on @xJetSwapBot (@test_xjet_bot for testnest) API. You need to get API key from bot. Open it and go to xJetConnect > Manage > Your app > API key.

    This page is fully interactive. Provide obtained API key to AUTHORIZE button on the right, and you can try all API methods by simply clicking buttons and filling forms here

    API token must be specified in header for requests marked with lock. Header name is <b>X-API-Key.</b>
  version: 1.0.0
paths:
  /api/v1/system.currencies:
    get:
      tags:
        - System
      summary: Get list of currencies.
      operationId: Get_list_of_currencies
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                currencies:
                  - id: 6370a5a11f8246a8dde20adf
                    name: TON
                    emoji: ðŸ’Ž
                    url: https://ton.org/
                    symbol: ton
                    master_contract: null
                    rates:
                      ton: 1
                      byn: 3.538
                      cny: 10.054
                      eur: 1.283
                      gbp: 1.098
                      kzt: 628.851
                      rub: 117.389
                      uah: 51.762
                      usd: 1.4
                      timestamp: 1687364191
                    verified: true
                    image: null
              schema: {}
  /api/v1/account.me:
    get:
      tags:
        - Account
      summary: Get information about API application.
      operationId: Get_information_about_API_application
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                id: string
                name: string
                service_wallet: string
              schema: {}
      security:
        - api_key: []
  /api/v1/account.balances:
    get:
      tags:
        - Account
      summary: Get balance.
      operationId: Get_balance
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                balances:
                  - currency: integer
                    amount: float
                    values:
                      byn: 0
                      cny: 0
                      eur: 0
                      gbp: 0
                      kzt: 0
                      rub: 0
                      uah: 0
                      usd: 0
                timestamp: integer
              schema: {}
      security:
        - api_key: []
  /api/v1/account.submitDeposit:
    get:
      tags:
        - Account
      summary: Check for deposit.
      operationId: Check_for_deposit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                success: bool
              schema: {}
      security:
        - api_key: []
  /api/v1/account.withdraw:
    post:
      tags:
        - Account
      summary: Withdraw funds.
      operationId: Withdraw_funds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_account_withdraw_body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/account.operations:
    post:
      tags:
        - Account
      summary: Get operations history.
      operationId: Get_operations_history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_account_operations_body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/cheque.create:
    post:
      tags:
        - Cheque
      summary: Create cheques.
      operationId: Create_cheques
      requestBody:
        content:
          application/json:
            example:
              cheque_id: string
              external_link: https://t.me/xJetSwapBot?start=c_<cheque_id>
            schema:
              $ref: '#/components/schemas/v1_cheque_create_body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/cheque.status:
    get:
      tags:
        - Cheque
      summary: Get cheque status.
      operationId: Get_cheque_status
      parameters:
        - name: cheque_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            title: cheque_id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                id: string
                issuer_id: string
                amount: float
                activates_count: integer
                activates: list[string]
                locked_value: float
                currency: string
                expires: bool
                description: string
                status: activated/canceled/expired/active
                password: string | None
                groups_id: list[string] | None
                personal_id: integer | None
                is_for_premium: bool
              schema: {}
      security:
        - api_key: []
  /api/v1/cheque.list:
    get:
      tags:
        - Cheque
      summary: Get list of cheques.
      operationId: Get_list_of_cheques
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/cheque.cancel:
    post:
      tags:
        - Cheque
      summary: Cancel cheque .
      operationId: Cancel_cheque
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_cheque_cancel_body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/invoice.create:
    post:
      tags:
        - Invoices
      summary: Create invoice.
      operationId: Create_invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_invoice_create_body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                invoice_id: string
                external_link: https://t.me/xJetSwapBot?start=inv_<cheque_id>
              schema: {}
      security:
        - api_key: []
  /api/v1/invoice.status:
    get:
      tags:
        - Invoices
      summary: Get invoice status.
      operationId: Get_invoice_status
      parameters:
        - name: invoice_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            title: invoice_id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                id: string
                description: string
                currency: string
                amount: float
                max_amount: None
                min_amount: None
                payments:
                  - telegram_id: integer
                    amount: float
                    comment: str | None
                max_payments: integer
                after_pay: []
                created: '2023-04-20T22:55:24.313000'
              schema: {}
      security:
        - api_key: []
  /api/v1/invoice.list:
    get:
      tags:
        - Invoices
      summary: Get list of invoices.
      operationId: Get_list_of_onvoices
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/nft.list:
    get:
      tags:
        - NFT
      summary: Get list of your NFTs.
      operationId: Get_list_of_your_NFTs
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []
  /api/v1/nft.transfer:
    post:
      tags:
        - NFT
      summary: Transfer your NFT.
      operationId: Transfer_you_NFT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_nft_transfer_body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - api_key: []

  /api/v1/exchanges.pairs:
    get:
      tags:
        - Exchanges
      summary: Get list of pairs.
      operationId: Get_list_of_pairs
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                {
  "pairs": [
    {
      "id": "647f771d6103be25ab2befb5",
      "assets": [
        "exc",
        "ton"
      ],
      "providers": {
        "dedust": {
          "pool": "EQD-rHe9UGVhcTF6SIEM72trdffF_pP_okSw3MCfd6Dd9wBq",
          "fee": 0.008,
          "reserves": [
            "866775829924296",
            "1319477571674"
          ],
          "cache_expire": 1688020521.209755
        }
      },
      "active": true,
      "trading_data": {
        "avg_price": 0.00152356618801984,
        "change_24h": 0
      }
      }]}
              
              schema: {}


  /api/v1/exchanges.estimate:
    post:
      tags:
        - Exchanges
      summary: Estimate.
      operationId: Estimate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_exchanges_estimate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                out: 636.782
                fee: 0.008
                
              schema: {}

  /api/v1/exchanges.createOrder:
    post:
      tags:
        - Exchanges
      summary: Create order.
      operationId: Create_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1_exchanges_order_create'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                id: 6490957fe590a4ce76990956
                pair:
                  - exc
                  - ton
                type: sell
                price: None
                user_id: 640e16147850a95917ae16a0
                source_amount: 439
                target_amount: 0.674561
                status: created
                created: '2023-06-19T20:50:56.019000'
              schema: {}
      security:
        - api_key: []

  /api/v1/exchanges.orderStatus:
    get:
      tags:
        - Exchanges
      summary: Get order status.
      operationId: Get_order_status
      parameters:
        - name: id
          in: query
          required: true
          style: form
          explode: true
          schema:
            title: order_id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              example:
                id: 6490957fe590a4ce76990956
                pair:
                  - exc
                  - ton
                type: sell
                price: None
                user_id: 640e16147850a95917ae16a0
                source_amount: 439
                target_amount: 0.674561
                transaction_hash: 1H2veknVD94YXQGRsS4u3Kkk17uZvu3Z57pKFfDarJM=
                status: completed
                created: '2023-06-19T20:50:56.019000'
                
              schema: {}
      security:
        - api_key: []
        
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    v1_account_withdraw_body:
      required:
        - amount
        - currency
        - ton_address
      type: object
      properties:
        ton_address:
          type: string
        currency:
          type: string
        amount:
          type: integer
    v1_account_operations_body:
      type: object
      properties:
        limit:
          type: integer
          default: 100
        offset:
          type: integer
          default: 0
    v1_cheque_create_body:
      type: object
      properties:
        currency:
          type: string
        amount:
          type: integer
        expires:
          type: integer
        description:
          type: string
          default: ''
        activates_count:
          type: integer
          default: 1
        groups_id:
          type: array
          items:
            type: integer
        personal_id:
          type: string
        password:
          type: string
        query_id:
          type: integer
        signature:
          type: string
    v1_cheque_cancel_body:
      type: object
      properties:
        cheque_id:
          type: string
    v1_invoice_create_body:
      type: object
      properties:
        currency:
          type: string
        amount:
          type: integer
        description:
          type: string
        max_payments:
          type: integer
          default: 1
        expires:
          type: integer
    v1_nft_transfer_body:
      type: object
      properties:
        nft_address:
          type: string
        to_address:
          type: string
        signature:
          type: string
    v1_exchanges_estimate:
      type: object
      properties:
        pair:
          type: array
          items:
            type: string

        type:
          type: string
        amount:
          type: integer
    v1_exchanges_order_create:
      type: object
      properties:
        pair:
          type: array
          items:
            type: string
        type:
          type: string
        amount:
          type: integer
        min_expected_amount:
          type: integer
        signature:
          type: string
          
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-Key
      in: header
